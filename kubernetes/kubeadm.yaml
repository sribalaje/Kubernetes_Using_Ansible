- hosts: kubeall
  tasks:
  - name: Install Docker Engine
    shell: |
      sudo apt-get update
      sudo apt-get install -y ca-certificates curl gnupg lsb-release
      sudo mkdir -p /etc/apt/keyrings
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
      $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      sudo apt-get update
      sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
      #sudo docker run hello-world
    register: docker_engine

  - debug:
      msg: "{{docker_engine.stdout}}"

  - name: Copy to multiple hosts
    copy:
     content: "{% for host in ansible_play_hosts_all %}{{ hostvars[host].docker_engine.stdout }}\n{% endfor %}"
     dest: /tmp/docker_engine.log
    delegate_to: localhost
    run_once: true
  
  - name: Install CRI-D
    shell: |
      git clone https://github.com/Mirantis/cri-dockerd.git
      wget https://storage.googleapis.com/golang/getgo/installer_linux
      chmod +x ./installer_linux
      ./installer_linux
      export PATH=$PATH:/root/.go/bin
      export GOPATH=/root/go
      export PATH=$PATH:/root/go/bin
      cd cri-dockerd
      mkdir bin
      go build -o bin/cri-dockerd
      mkdir -p /usr/local/bin
      install -o root -g root -m 0755 bin/cri-dockerd /usr/local/bin/cri-dockerd
      cp -a packaging/systemd/* /etc/systemd/system
      sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service
      systemctl daemon-reload
      systemctl enable cri-docker.service
      systemctl enable --now cri-docker.socket
      systemctl restart cri-docker.service
    register: go_install

  - debug: 
      msg: "{{ go_install.stdout }}"

  - name: Copy to multiple hosts
    copy:
     content: "{% for host in ansible_play_hosts_all %}{{ hostvars[host].go_install.stdout }}\n{% endfor %}"
     dest: /tmp/go_install.log
    delegate_to: localhost
    run_once: true

  - name: Install Kubeadm
    shell: |
      apt-get update
      apt-get install -y apt-transport-https ca-certificates curl
      curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
      echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
      apt-get update
      apt-get install -y kubelet kubeadm kubectl
      apt-mark hold kubelet kubeadm kubectl
    register: kubeadm_log

  - debug:
      msg: "{{kubeadm_log.stdout}}"

  - name: Copy to multiple hosts
    copy:
     content: "{% for host in ansible_play_hosts_all %}{{ hostvars[host].kubeadm_log.stdout }}\n{% endfor %}"
     dest: /tmp/kubeadm.log
    delegate_to: localhost
    run_once: true
